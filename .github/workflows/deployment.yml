name: build
on: [ push, pull_request ]
env:
  REGISTRY_URL: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
  IMAGE_NAME: ghcr.io/bookbnb/react-app
  IMAGE_VERSION: ${{ github.sha }}
jobs:
  build:
    runs-on: ubuntu-20.04
    container: node:14.15.3
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Cache node dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-dependencies
      - name: Install dependencies
        run: npm install
      - name: Run test suite
        run: npm run test:coverage
      - name: Send coverage report
        run: node_modules/.bin/codecov -f coverage/*.json

  package:
    runs-on: ubuntu-20.04
    needs: build
    if: contains('
      refs/heads/master
      refs/heads/develop
      ', github.ref)
    steps:
      - name: Cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true # Ignore the failure of a step and avoid terminating the job.
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Build image
        env:
          BACKEND_URL: https://bookbnb-core-service-seblaz.cloud.okteto.net
        run: docker/push_image.sh

  deploy-in-heroku:
    runs-on: ubuntu-20.04
    needs: package
    if: contains('
      refs/heads/master
      refs/heads/develop
      ', github.ref)
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Deploy app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          export BRANCH=${GITHUB_REF##*/}
          heroku/deploy.sh

  deploy-in-kubernetes:
    runs-on: ubuntu-20.04
    container: bitnami/kubectl
    needs: package
    if: contains('
      refs/heads/master
      refs/heads/develop
      ', github.ref)
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Deploy app
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
          KUBECONFIG: /tmp/config
          KUBE_NAMESPACE: seblaz
        run: |
          echo ${KUBECONFIG_CONTENT} | base64 --decode > ${KUBECONFIG}
          kubernetes/deploy.sh
